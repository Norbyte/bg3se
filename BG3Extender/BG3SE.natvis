<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="bg3se::FixedStringId">
    <DisplayString Condition="Index == 0xffffffff">(null)</DisplayString>
    <DisplayString Condition="Index != 0xffffffff">{((bg3se::GlobalStringTable::StringEntry*)((char*)(*bg3se::gStaticSymbols->ls__gGlobalStringTable)->SubTables[Index &amp; 0xF].Buckets[(Index >> 4) &amp; 0xFFFF] + (*bg3se::gStaticSymbols->ls__gGlobalStringTable)->SubTables[Index &amp; 0xF].EntrySize * (Index >> 20)))->Str,na}</DisplayString>
  </Type>
  
  <Type Name="bg3se::StaticArray&lt;*&gt;">
    <Intrinsic Name="size" Expression="size_" />
    <DisplayString>{{ size={size_} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>buf_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <Type Name="bg3se::Array&lt;*&gt;">
    <Intrinsic Name="size" Expression="size_" />
    <Intrinsic Name="capacity" Expression="capacity_" />
    <DisplayString>{{ size={size_} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <Item Name="[capacity]" ExcludeView="simple">capacity_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>buf_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <Type Name="bg3se::HashSet&lt;*&gt;">
    <Intrinsic Name="size" Expression="Keys.size_" />
    <DisplayString>{{ size={Keys.size_} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">Keys.size_</Item>
      <ArrayItems>
        <Size>Keys.size_</Size>
        <ValuePointer>Keys.buf_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="bg3se::HashMap&lt;*&gt;">
    <Intrinsic Name="size" Expression="Keys.size_" />
    <DisplayString>{{ size={Keys.size_} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">Keys.size_</Item>
      <Item Name="[Keys]" ExcludeView="simple">Keys</Item>
      <Item Name="[Values]" ExcludeView="simple">Values</Item>
    </Expand>
  </Type>
  
  <Type Name="bg3se::ObjectSet&lt;*&gt;">
    <Intrinsic Name="size" Expression="Size" />
    <Intrinsic Name="capacity" Expression="Capacity" />
    <DisplayString>{{ size={Size} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">Size</Item>
      <Item Name="[capacity]" ExcludeView="simple">Capacity</Item>
      <ArrayItems>
        <Size>Size</Size>
        <ValuePointer>Buf</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <Type Name="Noesis::Symbol">
    <DisplayString>{((char**)((Noesis::SymbolManagerInternals*)((uintptr_t)bg3se::gStaticSymbols->Noesis__SymbolManager__Buf1 - 8))->Strings.mBegin)[mIndex]}</DisplayString>
  </Type>

  <Type Name="Noesis::BaseVector&lt;*&gt;">
    <Intrinsic Name="size" Expression="mSize" />
    <Intrinsic Name="capacity" Expression="mCapacity" />
    <DisplayString>{{ size={mSize} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">mSize</Item>
      <Item Name="[capacity]" ExcludeView="simple">mCapacity</Item>
      <ArrayItems>
        <Size>mSize</Size>
        <ValuePointer>($T1*)mBegin</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Noesis::HashMapImpl&lt;*&gt;">
    <DisplayString>{{size={mNumEntries}}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="mNumEntries">mNumEntries</Item>
      <CustomListItems>
        <Variable Name="i" InitialValue="0"/>
        <Loop>
          <Break Condition="i >= mNumBuckets"/>
          <If Condition="mBuckets[i].key != 1">
            <Item Name="{mBuckets[i].key}">mBuckets[i].value</Item>
          </If>
          <Exec>i++</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="Noesis::HashSetImpl&lt;*&gt;">
    <DisplayString>{{size={mNumEntries}}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="mNumEntries">mNumEntries</Item>
      <CustomListItems>
        <Variable Name="i" InitialValue="0"/>
        <Variable Name="idx" InitialValue="0"/>
        <Loop>
          <Break Condition="i >= mNumBuckets"/>
          <If Condition="mBuckets[i].key != 1">
            <Item Name="{idx}">mBuckets[i].key</Item>
            <Exec>idx++</Exec>
          </If>
          <Exec>i++</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>
</AutoVisualizer>